package conv

import (
	"fmt"
	"strconv"
)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// import conv "github.com/Cheejyg/Conv/Go"
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ToString
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// ToString parses interface{} interface_ to string.
func ToString(interface_ interface{}) (string_ string) {
	string_ = fmt.Sprint(interface_)

	return
}

// ToPtrString parses interface{} interface_ to *string.
func ToPtrString(interface_ interface{}) (ptr_string_ *string) {
	ptr_string_ = new(string)

	*ptr_string_ = fmt.Sprint(interface_)

	return
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// strconv
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Atoi is equivalent to strconv.ParseInt(s, 10, 0), converted to type int.
func Atoi(string_ string) (int_ int, err error) {
	int_, err = strconv.Atoi(string_)

	return
}

// Itoa is equivalent to strconv.FormatInt(int64(int_), 10).
func Itoa(int_ int) (string_ string) {
	string_ = strconv.Itoa(int_)

	return
}
